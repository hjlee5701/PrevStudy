plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.hanghae'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // ✅ Spring Boot Starter (JPA, Security, Web, Web Services)
    // ✅ Spring Boot Starter (JPA, Security, Web)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // ✅ Jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'    // API 인터페이스 ex) JwtBuilder
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'   // API 구현체 + 서명/암호화 로직 포함
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'// ex) Payload 역/직렬화에 사용


    // ✅ Lombok (컴파일 시 적용)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ✅ 테스트 관련 라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test'  // Spring Boot Test
    testImplementation 'org.springframework.security:spring-security-test'  // Security Test
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'  // JUnit5
    testImplementation 'org.assertj:assertj-core:3.24.2'  // AssertJ
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'  // JUnit 실행기

    // ✅ H2 데이터베이스 (테스트 환경에서만 사용)
    testImplementation 'com.h2database:h2'

    // ✅ MySQL (주석 해제하면 사용 가능)
//    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
}



test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}